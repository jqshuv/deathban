plugins {
    id 'java'
    id "com.modrinth.minotaur" version "2.+"
    id "xyz.jpenilla.run-paper" version "2.3.1"
    id "com.github.breadmoirai.github-release" version "2.4.1"
}

group = 'com.jqshuv'
version = '1.2.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN") // Remember to have the MODRINTH_TOKEN environment variable set or else this will fail - just make sure it stays private!
    projectId = "deathban" // This can be the project ID or the slug. Either will work!
    versionNumber = rootProject.version.toString()
    versionName = "DeathBan ${rootProject.version}"
    versionType = "release" // This is the default -- can also be `beta` or `alpha`
    syncBodyFrom = rootProject.file("README.md").text
    uploadFile = jar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["1.21", "1.21.1", "1.21.2", "1.21.3", "1.21.4"] // Must be an array, even with only one version
    loaders = ["bukkit", "paper", "purpur", "spigot"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
    changelog = rootProject.file("CHANGELOG.md").text
}

githubRelease {
    token = ""
    owner = "jqshuv"
    repo = "deathban"
    tagName = "v${project.version}"
    targetCommitish = "master"
    releaseName = "Version ${project.version}"
    body = rootProject.file("CHANGELOG.md").text
    draft = true
    releaseAssets = jar
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.13")
        jvmArgs("-Dcom.mojang.eula.agree=true")
    }
}

